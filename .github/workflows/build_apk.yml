name: Build Flet APK

on:
  push:
    branches:
      - main  # Adjust if necessary

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install tar and other system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tar gzip

      - name: Verify tar installation
        run: |
          which tar
          tar --version

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.5'  # Specify the Python version

      - name: Install Python dependencies
        run: |
          pip install flet pyinstaller buildozer cython

      - name: Install Android SDK
        run: |
          # Clean up any existing cmdline-tools directory
          rm -rf $HOME/android-sdk/cmdline-tools
          mkdir -p $HOME/android-sdk/cmdline-tools
          
          # Download and unzip the command line tools
          cd $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip
          rm commandlinetools-linux-9477386_latest.zip
          
          # Move the contents to the expected directory structure
          mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest

          # Set ANDROID_HOME environment variable
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=\$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

          # Accept licenses and install required components
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "build-tools;30.0.3" "platforms;android-30"

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          java-package: jdk
          architecture: x64
          check-latest: false
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true

      - name: Build Flet App Executable
        run: |
          pyinstaller --onefile main.py  # Ensure this matches your main script name

      - name: Prepare for APK build
        run: |
          mkdir -p my_app/bin
          mv dist/main my_app/bin/  # Move the executable to the correct folder for Buildozer

      - name: Create Buildozer Spec
        run: |
          cd my_app
          buildozer init  # Creates a buildozer.spec file
          echo 'requirements = python3,flet' >> buildozer.spec  # Add Flet as a requirement

      - name: Build APK
        run: |
          cd my_app
          buildozer -v android debug  # Builds the APK

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: MyFletApp-debug.apk
          path: my_app/bin/*.apk  # Adjust this path based on your app's output directory
